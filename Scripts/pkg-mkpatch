#!/bin/sh -e

##########################################################################
#   Script description:
#       Generate a patch for a pkgsrc source file
#
#   Arguments:
#       Path to file from pkgsrc dir
#       
#   History:
#   Date        Name        Modification
#   2014-11-10  J Bacon     Begin
##########################################################################

usage()
{
    printf "Usage: $0 filename\n"
    exit 1
}


##########################################################################
#   Main
##########################################################################

if [ $# != 1 ]; then
    usage
fi

filename="$1"
if [ ! -e DESCR ]; then
    printf "$0 must be run from a package directory.\n"
    exit 1
fi

if [ ! -e "$filename.orig" ]; then
    printf "Error: No $filename.orig present.\n"
    exit 1
fi

pkg_dir=`pwd`
grandparent=${pkg_dir%/*/*}
package=${pkg_dir#$grandparent/}
WRKSRC=`auto-print-make-variable -p $grandparent $package WRKSRC`
# Get relative path
WRKSRC=${WRKSRC#$pkg_dir/}

mkdir -p patches

# Go to WRKSRC and generate patch file
set -x
cd $WRKSRC
file1=${filename#./$WRKSRC/}
file=${file1#$WRKSRC/}
patch_file='patch-'`echo "$file" | sed -e 's|_|__|g' | sed -e 's|/|_|g'`
pkgdiff "$file.orig" "$file" > $pkg_dir/patches/$patch_file || true
#${EDITOR:=vi}
cd $pkg_dir
vi patches/$patch_file
if which bmake; then
    make=bmake
else
    make=make
fi
$make makepatchsum
