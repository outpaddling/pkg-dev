#!/bin/sh -e

##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}

if [ `uname` = 'Darwin' ]; then
    cat << EOM
Warning: Running $0 on Darwin may generate .dylib files instead of .so files.
EOM
    printf "Continue? (y/[n]) "
    read continue
    if [ 0$continue != 0y ]; then
	exit
    fi
fi

if [ -e PLIST.`uname -s` ]; then
    plist=PLIST.`uname -s`
else
    plist=PLIST
fi

printf "Remove distfile? (y/[n]) "
read remove_distfile

if [ -d CVS ]; then
    cvs up -dP
elif [ -d ../.svn ]; then
    svn up
fi

if which bmake; then
    make='bmake'
else
    make='make'
fi

if [ 0$remove_distfile = 0y ]; then
    ${make} distclean
else
    ${make} clean
fi

${make} deinstall
pause
rm -f distinfo
${make} distinfo

printf "Regenerate $plist? (y/[n]) "
read regen_plist

if [ 0$regen_plist = 0'y' ]; then
    cp $plist $plist.old
    # Fails if PLIST is off and PKG_DEVELOPER=yes
    ${make} install || true
    ${make} print-PLIST > $plist
    if diff -u $plist.old $plist; then
	printf "No changes to $plist\n"
    fi
    pause
    vi $plist
    ${make} clean
    ${make} deinstall
    printf "Remove $plist.old? y/[n] "
    read remove
    if [ 0$remove = 0y ]; then
	rm -f $plist.old
    fi
fi

${make} install

if [ -d CVS ]; then
    cvs ci
elif [ -d ../.svn ]; then
    svn ci -m "pkg-remake"
fi

